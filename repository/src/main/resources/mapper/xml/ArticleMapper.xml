<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stackoak.stackoak.repository.article.ArticleMapper">
    <select id="selectByCategoryAndRecent" resultType="com.stackoak.stackoak.common.data.article.ArticleBriefVO">
        SELECT a.id, a.title, a.cover, a.like_count AS likeCount, a.view_count AS viewCount,
        a.collect_count AS collectCount, a.description, m.nickname, m.id AS userId,
        a.visible_status as visibleStatus,
        a.publish_time AS publishTime,
        GROUP_CONCAT(t.id) AS tagIds,
        GROUP_CONCAT(t.name) AS tagNames

        FROM article a
        <if test="dto.categoryId != null and dto.categoryId != 0">
            INNER JOIN category c ON a.category_id = c.id
        </if>
        LEFT JOIN user m ON a.user_id = m.id
        LEFT JOIN article_tag at ON a.id = at.article_id
        LEFT JOIN tag t ON at.tag_id = t.id
        <where>
            <if test="dto.categoryId != null and dto.categoryId != 0">
                AND a.category_id = #{dto.categoryId}
            </if>
        </where>
        GROUP BY a.id
        ORDER BY a.publish_time DESC
    </select>
    <resultMap id="ArticleResultMap" type="com.stackoak.stackoak.common.data.article.Article">
        <!-- 主键字段 -->
        <id column="id" property="id" />

        <!-- 普通字段 -->
        <result column="title" property="title" />
        <result column="content" property="content" />
        <result column="cover" property="cover" />
        <result column="description" property="description" />
        <result column="like_count" property="likeCount" />
        <result column="view_count" property="viewCount" />
        <result column="comment_count" property="commentCount" />
        <result column="publish_time" property="publishTime" />
        <result column="update_time" property="updateTime" />
        <result column="create_time" property="createTime" />
        <result column="zone" property="zone" />
        <result column="collect_count" property="collectCount" />
        <result column="content_count" property="contentCount" />
        <result column="user_id" property="userId" />
        <result column="category_id" property="categoryId" />
        <result column="visible_status" property="visibleStatus" />
        <result column="publish_status" property="publishStatus" />
        <result column="is_deleted" property="deleted" />
        <result column="column_id" property="columnId" />
        <result column="creative_type" property="creativeType" />
        <result column="visit_password" property="visitPassword" />
        <result column="original_url" property="originalUrl" />
        <result column="status" property="status" />
        <result column="authorize_status" property="authorizeStatus" />
    </resultMap>
    <resultMap id="ArticleDetailResultMap" type="com.stackoak.stackoak.common.data.article.ArticleDetailVO">
        <result property="articleInfo.id" column="articleId"/>
        <result property="articleInfo.title" column="title"/>
        <result property="articleInfo.content" column="content"/>
        <result property="articleInfo.cover" column="cover"/>
        <result property="articleInfo.description" column="description"/>
        <result property="articleInfo.likeCount" column="likeCount"/>
        <result property="articleInfo.viewCount" column="viewCount"/>
        <result property="articleInfo.commentCount" column="commentCount"/>
        <result property="articleInfo.publishTime" column="publishTime"/>
        <result property="articleInfo.collectCount" column="collectCount"/>
        <result property="articleInfo.contentCount" column="contentCount"/>
        <result property="articleInfo.columnId" column="columnId"/>
        <result property="articleInfo.visibleStatus" column="visibleStatus"/>
        <result property="articleInfo.publishStatus" column="publishStatus"/>
        <result property="articleInfo.creativeType" column="creativeType"/>
        <result property="articleInfo.originalUrl" column="originalUrl"/>
        <result property="articleInfo.authorizeStatus" column="authorizeStatus"/>
        <result property="articleInfo.visitPassword" column="visitPassword"/>
        <result property="userInfo.userId" column="userId"/>
        <result property="userInfo.nickname" column="nickname"/>
        <result property="userInfo.jobTitle" column="job_title"/>
        <result property="userInfo.avatar" column="avatar"/>
        <result property="userInfo.articleCount" column="article_count"/>
        <result property="userInfo.fansCount" column="fans_count"/>
        <result property="userInfo.gotCollectCount" column="got_collect_count"/>
        <result property="userInfo.gotLikeCount" column="got_like_count"/>
        <result property="category.categoryId" column="categoryId"/>
        <result property="category.categoryName" column="categoryName"/>
    </resultMap>
    <select id="selectArticleDetail" resultMap="ArticleDetailResultMap">
        SELECT a.id                                              AS articleId,
               a.title,
               a.content,
               a.cover,
               a.description,
               a.like_count                                      AS likeCount,
               a.view_count                                      AS viewCount,
               a.comment_count                                   AS commentCount,
               a.publish_time                                    AS publishTime,
               a.collect_count                                   AS collectCount,
               a.content_count                                   AS contentCount,
               a.column_id                                       AS columnId,
               a.visible_status                                  AS visibleStatus,
               a.publish_status                                  AS publishStatus,
               a.creative_type                                   AS creativeType,
               a.original_url                                    AS originalUrl,
               a.authorize_status                                AS authorizeStatus,
               a.visit_password                                  AS visitPassword,
               m.id                                              AS userId,
               m.nickname                                        AS nickname,
               m.avatar,
               m.job_title,
               m.article_count,
               m.fans_count,
               m.got_collect_count,
               m.got_like_count,
               c.id                                              AS categoryId,
               c.name                                            AS categoryName,

               GROUP_CONCAT(DISTINCT t.id ORDER BY t.id)         AS tagIds,
               GROUP_CONCAT(DISTINCT t.name ORDER BY t.name)     AS tagNames,
               GROUP_CONCAT(DISTINCT col.id ORDER BY col.id)     AS columnIds,
               GROUP_CONCAT(DISTINCT col.name ORDER BY col.name) AS columnNames
        FROM article a
                 LEFT JOIN user m ON a.user_id = m.id
                 LEFT JOIN category c ON a.category_id = c.id
                 LEFT JOIN article_tag at
        ON a.id = at.article_id
            LEFT JOIN tag t ON at.tag_id = t.id
            LEFT JOIN article_column ac ON a.id = ac.article_id
            LEFT JOIN columns col ON ac.column_id = col.id
        WHERE a.id = #{id}
        GROUP BY a.id;
    </select>
    <select id="selectByCategory" resultMap="ArticleResultMap">
        SELECT a.id, a.title, a.publish_time, a.status, a.create_time
        FROM article a
                 INNER JOIN article_collect ac ON a.id = ac.article_id
        WHERE ac.collect_id = #{cid}
        order by a.create_time desc
    </select>
    <select id="selectByColumn" resultMap="ArticleResultMap">
        SELECT a.id, a.title, a.publish_time, a.status, a.create_time,
               a.cover,a.view_count, a.like_count, a.comment_count, a.collect_count
        FROM article a
                 INNER JOIN article_column ac ON a.id = ac.article_id
        WHERE ac.column_id = #{cid}
        order by a.create_time desc
    </select>
    <select id="selectFollowList" resultType="com.stackoak.stackoak.common.data.article.ArticleBriefVO">
        select a.*
        from article a
                 inner join follows f on f.target_user_id = a.user_id
        where f.user_id = #{userId}
          and publish_status = 1
          and visible_status!=2
        order by create_time desc
    </select>
    <select id="selectAuthorArticleList"  resultMap="ArticleResultMap">
        SELECT a.*
        FROM article a
        WHERE a.user_id = #{userId}
        order by a.create_time desc
    </select>
    <select id="selectArticleListByColumnId"
            resultType="com.stackoak.stackoak.common.data.article.ArticleBriefVO">
        SELECT
            a.id,
            a.title,
            a.cover,
            a.like_count AS likeCount,
            a.view_count AS viewCount,
            a.collect_count AS collectCount,
            a.description,
            a.visible_status AS visibleStatus,
            a.publish_time AS publishTime,
            GROUP_CONCAT(t.id) AS tagIds,
            GROUP_CONCAT(t.name) AS tagNames
        FROM article a
                 INNER JOIN article_column ac
                            ON ac.article_id = a.id
                                AND ac.column_id = #{cid}
                 LEFT JOIN article_tag at
        ON a.id = at.article_id
            LEFT JOIN tag t
            ON at.tag_id = t.id
        GROUP BY a.id, a.title, a.cover, a.like_count, a.view_count,
            a.collect_count, a.description, a.visible_status,
            a.publish_time -- 显式指定所有非聚合列
        ORDER BY a.publish_time DESC
    </select>
    <select id="selectAuthorHotArticleList"
            resultType="com.stackoak.stackoak.common.data.article.ArticleBriefVO">
        SELECT
            a.id,
            a.title,
            a.cover,
            a.like_count AS likeCount,
            a.view_count AS viewCount,
            a.collect_count AS collectCount,
            a.description,
            a.visible_status AS visibleStatus,
            a.publish_time AS publishTime,
            ROUND(
                    ( (a.like_count * #{likeWeight} + a.view_count * #{viewWeight} +
                       a.collect_count * #{collectWeight} + a.comment_count * #{commentWeight}) + u.power )
                        / POW(DATEDIFF(NOW(), a.publish_time) + 1, #{gravity})
            ) AS heat
        FROM article a
                 join user u on a.user_id = u.id
        WHERE a.user_id = #{userId}  and a.publish_status = 1
        ORDER BY heat DESC
    </select>
    <select id="findComprehensiveRank" resultType="com.stackoak.stackoak.common.data.article.ArticleBriefVO">
        SELECT a.id,
               a.title,
               a.cover,
               a.like_count     AS likeCount,
               a.view_count     AS viewCount,
               a.collect_count  AS collectCount,
               a.description,
               a.visible_status AS visibleStatus,
               a.publish_time   AS publishTime,
               ROUND(
                       ((a.like_count * #{likeWeight} + a.view_count * #{viewWeight} +
                         a.collect_count * #{collectWeight} + a.comment_count * #{commentWeight}) + u.power)
                           / POW(DATEDIFF(NOW(), a.publish_time) + 1, #{gravity})
               )                AS heat
        FROM article a
                 join user u on a.user_id = u.id
        WHERE a.publish_status = 1
        ORDER BY heat DESC
    </select>
</mapper>
