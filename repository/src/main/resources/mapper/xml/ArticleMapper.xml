<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stackoak.stackoak.repository.article.ArticleMapper">
    <select id="selectByCategoryAndRecent" resultType="com.stackoak.stackoak.common.data.article.ArticleBriefVO">
        SELECT a.id, a.title, a.cover, a.like_count AS likeCount, a.view_count AS viewCount,
        a.collect_count AS collectCount, a.description, m.username, m.id AS userId,
        a.visible_status as visibleStatus,
        a.publish_time AS publishTime,
        GROUP_CONCAT(t.id) AS tagIds,
        GROUP_CONCAT(t.name) AS tagNames

        FROM article a
        <if test="dto.categoryId != null and dto.categoryId != 0">
            INNER JOIN category c ON a.category_id = c.id
        </if>
        LEFT JOIN user m ON a.user_id = m.id
        LEFT JOIN article_tag at ON a.id = at.article_id
        LEFT JOIN tag t ON at.tag_id = t.id
        <where>
            <if test="dto.categoryId != null and dto.categoryId != 0">
                AND a.category_id = #{dto.categoryId}
            </if>
        </where>
        GROUP BY a.id
        ORDER BY a.publish_time DESC
    </select>
    <resultMap id="ArticleDetailResultMap" type="com.stackoak.stackoak.common.data.article.ArticleDetailVO">
        <result property="articleInfo.id" column="articleId"/>
        <result property="articleInfo.title" column="title"/>
        <result property="articleInfo.content" column="content"/>
        <result property="articleInfo.cover" column="cover"/>
        <result property="articleInfo.description" column="description"/>
        <result property="articleInfo.likeCount" column="likeCount"/>
        <result property="articleInfo.viewCount" column="viewCount"/>
        <result property="articleInfo.commentCount" column="commentCount"/>
        <result property="articleInfo.publishTime" column="publishTime"/>
        <result property="articleInfo.collectCount" column="collectCount"/>
        <result property="articleInfo.contentCount" column="contentCount"/>
        <result property="articleInfo.columnId" column="columnId"/>
        <result property="articleInfo.visibleStatus" column="visibleStatus"/>
        <result property="articleInfo.publishStatus" column="publishStatus"/>
        <result property="articleInfo.creativeType" column="creativeType"/>
        <result property="articleInfo.originalUrl" column="originalUrl"/>
        <result property="userInfo.userId" column="userId"/>
        <result property="userInfo.userName" column="userName"/>
        <result property="userInfo.avatar" column="avatar"/>
        <result property="category.categoryId" column="categoryId"/>
        <result property="category.categoryName" column="categoryName"/>
    </resultMap>
    <select id="selectArticleDetail" resultMap="ArticleDetailResultMap">
        SELECT
            a.id AS articleId,
            a.title,
            a.content,
            a.cover,
            a.description,
            a.like_count AS likeCount,
            a.view_count AS viewCount,
            a.comment_count AS commentCount,
            a.publish_time AS publishTime,
            a.collect_count AS collectCount,
            a.content_count AS contentCount,
            a.column_id as columnId,
            a.visible_status as visibleStatus,
            a.publish_status as publishStatus,
            a.creative_type as creativeType,
            a.original_url as originalUrl,
            m.id AS userId,
            m.username AS userName,
            m.avatar,
            c.id AS categoryId,
            c.name AS categoryName,

            GROUP_CONCAT(t.id) AS tagIds,
            GROUP_CONCAT(t.name) AS tagNames
        FROM article a
                 LEFT JOIN user m ON a.user_id = m.id
                 LEFT JOIN category c ON a.category_id = c.id
                 LEFT JOIN article_tag at ON a.id = at.article_id
            LEFT JOIN tag t ON at.tag_id = t.id
        WHERE a.id = #{id}
        GROUP BY a.id;

    </select>
</mapper>
