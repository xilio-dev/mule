<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stackoak.stackoak.repository.column.ColumnMapper">

    <select id="selectColumnsByArticleId" resultType="com.stackoak.stackoak.common.data.column.Column">
        select c.id, c.name, c.user_id as userId, c.cover, c.intro
        from columns c
                 inner join article_column ac on ac.column_id = c.id
        where c.user_id = #{userId}
          and ac.article_id = #{articleId}
    </select>
    <!-- 查询订阅我的专栏的用户列表 -->
    <select id="findSubscribersByColumnId" resultType="com.stackoak.stackoak.common.data.user.User">
        SELECT cs.user_id       AS userId,
               u.nickname,
               cs.subscribed_at as subscribedAt
        FROM column_subscription cs
                 JOIN
             user u ON cs.user_id = u.id
        WHERE cs.column_id = #{columnId}
          AND cs.status = 1
    </select>

    <!-- 查询我订阅的专栏列表 -->
    <select id="findSubscribedColumnsByUserId" resultType="com.stackoak.stackoak.common.data.column.Column">
        SELECT c.id,
               c.name,
               c.cover,
               c.user_id as userId,
               c.intro,
               cs.subscribed_at
        FROM column_subscription cs
                 JOIN
             columns c ON cs.column_id = c.id
        WHERE cs.user_id = #{userId}
          AND cs.status = 1
    </select>
    <resultMap id="ColumnDetailResultMap" type="com.stackoak.stackoak.common.data.column.ColumnDetailVo">
        <result property="column.id" column="cid"/>
        <result property="column.name" column="columnName"/>
        <result property="column.cover" column="columnCover"/>
        <result property="column.intro" column="columnIntro"/>

        <result property="userInfo.id" column="userId"/>
        <result property="userInfo.nickname" column="nickname"/>
        <result property="userInfo.avatar" column="avatar"/>
        <result property="userInfo.jobTitle" column="jobTitle"/>
        <result property="userInfo.articleCount" column="articleCount"/>
        <result property="userInfo.fansCount" column="fansCount"/>
        <result property="userInfo.gotCollectCount" column="gotCollectCount"/>
        <result property="userInfo.gotLikeCount" column="gotLikeCount"/>

    </resultMap>
    <select id="selectColumnDetailByUserId"
            resultMap="ColumnDetailResultMap">
        SELECT DISTINCT COUNT(DISTINCT ac.article_id) AS articleTotalCount,
                        COUNT(DISTINCT cs.column_id)  AS subTotalCount,
                        SUM(DISTINCT a.view_count)    AS viewTotalCount,
                        c.id                          AS cid,
                        c.name                        as columnName,
                        c.cover                       as columnCover,
                        c.intro                       as columnIntro,
                        u.id                          as userId,
                        u.nickname                    as nickname,
                        u.avatar                      as avatar,
                        u.job_title                   as jobTitle,
                        u.article_count               as articleCount,
                        u.fans_count                  as fansCount,
                        u.got_collect_count           as gotCollectCount,
                        u.got_like_count              as gotLikeCount
        FROM USER u
                 LEFT JOIN COLUMNS c ON u.id = c.user_id
                 left join article_column ac on ac.column_id = c.id
                 left join article a on ac.article_id = a.id
                 left join column_subscription cs on c.id = cs.column_id
        WHERE c.user_id = #{uid}
          AND c.id = #{cid}

    </select>
</mapper>
